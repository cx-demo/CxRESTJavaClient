{
	"swagger": "2.0",
	"info": {
		"version": "v1",
		"title": "Checkmarx REST API",
		"description": "The login method (/auth/login) under the GENERAL section is now obsolete and will be removed in future Checkmarx versions. It is recommended to only use this method to explore the CxREST API through Swagger. In order to authenticate the CxREST API from a custom application, use OAuth2 according to the <a href=http://localhost/cxrestapi/auth/identity/.well-known/openid-configuration >discovery document</a> and <a href ='https://checkmarx.atlassian.net/wiki/spaces/KC/overview' >Checkmarx documentation</a>. "
	},
	"host": "localhost",
	"basePath": "/cxrestapi/help",
	"schemes": ["http"],
	"paths": {
		"/osa/scans": {
			"get": {
				"tags": ["OSA"],
				"summary": "Returns basic scan details for all scans associated with a specified project id",
				"operationId": "OsaScanRequests_GetByprojectIdpageitemsPerPage",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "projectId",
						"in": "query",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "page",
						"in": "query",
						"description": "Page number (default 1)",
						"required": false,
						"type": "integer",
						"format": "int32"
					}, {
						"name": "itemsPerPage",
						"in": "query",
						"description": "Number of items per page (default 100)",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Osa.Application.DTOs.BasicScanDTO"
							}
						}
					}
				}
			},
			"post": {
				"tags": ["OSA"],
				"summary": "Creates a new scan request",
				"operationId": "OsaScanRequests_PostByscanRequestInfo.projectIdscanRequestInfo.originscanRequestInfo.hashedFilesList",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "projectId",
						"in": "formData",
						"description": "The Project Id associated with requested scan",
						"required": false,
						"type": "integer"
					}, {
						"name": "origin",
						"in": "formData",
						"description": "The location from which scan was requested (if not specified (Portal) will be selected)",
						"required": false,
						"type": "string"
					}, {
						"name": "zippedSource",
						"in": "formData",
						"description": "Zipped source code to scan",
						"required": false,
						"type": "file"
					}
				],
				"responses": {
					"202": {
						"description": "Accepted",
						"schema": {
							"$ref": "#/definitions/Cx.Osa.Presentation.DTOs.NewDTOs.NewScanResponseDTO"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Defines the API authentication credentials",
				"operationId": "Auth_LoginByuser",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "user",
						"in": "body",
						"description": "User credentails",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.AccessControl.API.DTOs.Credentials"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/auth/teams": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets details of all teams",
				"operationId": "Teams_Get",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.CrossCutting.AccessControl.Authorization.DTOs.TeamDTO"
							}
						}
					}
				}
			}
		},
		"/customTasks": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets a collection of Custom Tasks (Scan Actions)",
				"operationId": "CustomTasks_Get",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.CustomTasks.Presentation.Dtos.GetCustomTaskDto"
							}
						}
					}
				}
			}
		},
		"/customFields": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Get all CustomFields",
				"operationId": "CustomFields_Get",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.CustomFields.Api.ViewModels.CustomFieldViewModel"
							}
						}
					}
				}
			}
		},
		"/projects/{id}": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets details of a specific project",
				"operationId": "ProjectsManagement_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.ProjectBaseDto"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": ["GENERAL"],
				"summary": "Updates an existing project",
				"operationId": "ProjectsManagement_PutByidproject",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a project to update",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "project",
						"in": "body",
						"description": "Project details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UpdateFullProjectDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			},
			"delete": {
				"tags": ["GENERAL"],
				"summary": "Deletes an existing project with all related scans",
				"operationId": "ProjectsManagement_DeleteByiddeleteProjectDto",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a project to delete",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "deleteProjectDto",
						"in": "body",
						"description": "A set of rules that specifies how the project should be deleted",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.DeleteProjectDto"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			},
			"patch": {
				"tags": ["GENERAL"],
				"summary": "Updates an existing project's name or team Id",
				"operationId": "ProjectsManagement_PatchByidproject",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a project to update",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "project",
						"in": "body",
						"description": "Project details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UpdateProjectDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/customTasks/{id}": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets a Custom Task (Scan Action) by id",
				"operationId": "CustomTasks_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific Custom task",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/Cx.CustomTasks.Presentation.Dtos.GetCustomTaskDto"
						}
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/issueTrackingSystems": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets details of all issue tracking systems",
				"operationId": "IssueTrackingSystems_GetAll",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.IssueTrackingSystems.Presentation.Dtos.GetIssueTrackingSystemDto"
							}
						},
						"examples": [{
								"id": 1,
								"name": "Test Server",
								"type": "Jira",
								"url": "http://10.61.1.72:8080/"
							}, {
								"id": 2,
								"name": "Other Test Server",
								"type": "Jira",
								"url": "http://18.91.5.72"
							}
						]
					}
				}
			}
		},
		"/reports/sastScan/{id}": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets the report when ready",
				"operationId": "Reports_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/rtf;v=1.0", "application/xml;v=1.0", "application/pdf;v=1.0", "application/csv;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific report",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "file"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/reports/sastScan/{id}/status": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets the status of a specific report in the queue",
				"operationId": "Reports_GetStatusByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific report",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/Cx.Reports.SastScan.Presentation.Dtos.CreateReportStatusDto"
						},
						"examples": {
							"link": {
								"rel": "content",
								"uri": "/reports/sastScan/1"
							},
							"contentType": "application/pdf",
							"status": {
								"id": 2,
								"value": "Created"
							}
						}
					},
					"404": {
						"description": "Not found"
					}
				}
			}
		},
		"/issueTrackingSystems/{id}/metadata": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets the metadata of specific issue tracking system",
				"operationId": "IssueTrackingSystems_GetMetadataByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "The Id of issue tracking system the metadata to retrieve for",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingSystemMetadata"
						},
						"examples": {
							"projects": [{
									"id": "10000",
									"name": "Example project",
									"issueTypes": [{
											"subtask": false,
											"id": "1",
											"name": "Example issue",
											"fields": [{
													"id": "1",
													"name": "Example field 1",
													"multiple": false,
													"required": false,
													"supported": true,
													"allowedValues": [{
															"id": "1",
															"name": "v1"
														}, {
															"id": "2",
															"name": "v2"
														}, {
															"id": "3",
															"name": "v3"
														}
													]
												}, {
													"id": "1",
													"name": "Example Field 1",
													"multiple": false,
													"required": false,
													"supported": true,
													"allowedValues": []
												}, {
													"id": "1",
													"name": "Example Field 2",
													"multiple": true,
													"required": false,
													"supported": true,
													"allowedValues": [{
															"id": "100",
															"name": "option 1"
														}, {
															"id": "298",
															"name": "option 2"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					}
				}
			}
		},
		"/projects/{id}/sourceCode/excludeSettings": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Set project's exclude folders/files patterns",
				"operationId": "ExcludeSettings_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GetExcludeSettingsDto"
						}
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": ["GENERAL"],
				"summary": "Set project's exclude folders/files patterns",
				"operationId": "ExcludeSettings_PutByidexcludeSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "excludeSettings",
						"in": "body",
						"description": "Exclude folders/files pattern settings",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.ExcludeSettingsDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "object"
						}
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/git": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets deatils of GIT source settings",
				"operationId": "GitSourceSettings_GetGitSettingsByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GetGitSourceSettingsDto"
						}
					}
				}
			},
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as GIT",
				"operationId": "GitSourceSettings_UpdateGitSettingsByidgitSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "gitSettings",
						"in": "body",
						"description": "GIT settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GitSourceSettingsDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/svn": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets deatils of SVN source settings",
				"operationId": "SvnSourceSettings_GetSvnSettingsByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GetSvnSourceSettingsDto"
						}
					}
				}
			},
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as SVN",
				"operationId": "SvnSourceSettings_UpdateSvnSettingsByidsvnSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "svnSettings",
						"in": "body",
						"description": "Svn settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.SvnSourceSettingsDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/tfs": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets deatils of TFS source settings",
				"operationId": "TfsSourceSettings_GetTfsSettingsByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GetTfsSourceSettingsDto"
						}
					}
				}
			},
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as TFS",
				"operationId": "TfsSourceSettings_UpdateTfsSettingsByidtfsSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "tfsSettings",
						"in": "body",
						"description": "TFS settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.TfsSourceSettingsDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/custom": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets details of Source Pulling parameters",
				"operationId": "CustomSourceSettings_GetCustomSettingsByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GetCustomSourceSettingsDto"
						}
					}
				}
			},
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as Source Pulling",
				"operationId": "CustomSourceSettings_UpdateCustomSettingsByidcustomSourceSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "customSourceSettings",
						"in": "body",
						"description": "Custom settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.CustomSourceSettingsDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/shared": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets deatils of Shared source settings",
				"operationId": "SharedSourceSettings_GetSharedSettingsByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GetSharedSourceSettingsDto"
						}
					}
				}
			},
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as shared",
				"operationId": "SharedSourceSettings_UpdateSharedSettingsByidsharedSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "sharedSettings",
						"in": "body",
						"description": "Shared settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.SharedSourceSettingsDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/perforce": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets details of Perforce source settings",
				"operationId": "PerforceSourceSettings_GetPerforceSettingsByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.GetPerforceSourceSettingsDto"
						}
					}
				}
			},
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as perforce",
				"operationId": "PerforceSourceSettings_UpdatePerforceSettingsByidperforceSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "perforceSettings",
						"in": "body",
						"description": "Perforce settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.PerforceSourceSettingDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects": {
			"get": {
				"tags": ["GENERAL"],
				"summary": "Gets details of all visible projects",
				"operationId": "ProjectsManagement_GetByprojectNameteamId",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "projectName",
						"in": "query",
						"required": false,
						"type": "string"
					}, {
						"name": "teamId",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.ProjectBaseDto"
							}
						}
					}
				}
			},
			"post": {
				"tags": ["GENERAL"],
				"summary": "Creates a new project with default preset and configuration settings",
				"operationId": "ProjectsManagement_PostByproject",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "project",
						"in": "body",
						"description": "Project details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.SaveProjectDto"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/reports/sastScan": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Register a new scan report",
				"operationId": "Reports_PostByreportRequest",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "reportRequest",
						"in": "body",
						"description": "Report type options: PDF, RTF, CSV, XML",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Reports.SastScan.Presentation.Dtos.SastReportRequestDTO"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted",
						"schema": {
							"$ref": "#/definitions/Cx.Reports.SastScan.Presentation.Dtos.CreateReportResponseDto"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/branch": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Branch an existing project",
				"operationId": "BranchProjects_BranchByidproject",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "project",
						"in": "body",
						"description": "Branched Project details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.BranchProjectDto"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/dataRetentionSettings": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's data retention settings",
				"operationId": "DataRetentionSettings_UpdateDataRetentionSettingsByiddataRetentionSettingsDto",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "dataRetentionSettingsDto",
						"in": "body",
						"description": "Data retention settings",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.DataRetentionSettingsDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/attachments": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Upload a zipped source code",
				"operationId": "LocalSourceSettings_UploadSourceCodeByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer"
					}, {
						"name": "zippedSource",
						"in": "formData",
						"description": "Zipped source code to scan",
						"required": false,
						"type": "file"
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/issueTrackingSettings/jira": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's issue tracking system as JIRA",
				"operationId": "JiraIssueTrackingSettings_UpdateJiraSettingsByidjiraSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "jiraSettings",
						"in": "body",
						"description": "JIRA issue tracking details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.JiraIssueTrackingSettingsDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/git/ssh": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as GIT which uses SSH protocol",
				"operationId": "GitSourceSettings_UpdateGitSettingsByidgitSshSettings.urlgitSshSettings.branch",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer"
					}, {
						"name": "url",
						"in": "formData",
						"description": "The URL which is used to connect to GIT repository",
						"required": true,
						"type": "string"
					}, {
						"name": "branch",
						"in": "formData",
						"description": "The branch of a GIT repository",
						"required": true,
						"type": "string"
					}, {
						"name": "privateKey",
						"in": "formData",
						"description": "Private key which is used to connect to GIT repository using SSH protocol",
						"required": false,
						"type": "file"
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/projects/{id}/sourceCode/remoteSettings/svn/ssh": {
			"post": {
				"tags": ["GENERAL"],
				"summary": "Set project's remote source settings as SVN which uses SSH protocol",
				"operationId": "SvnSourceSettings_UpdateSvnSettingsByidsvnSshSettings.absoluteUrlsvnSshSettings.portsvnSshSettings.paths",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific project",
						"required": true,
						"type": "integer"
					}, {
						"name": "absoluteUrl",
						"in": "formData",
						"description": "The URL which is used to connect to SVN repository",
						"required": true,
						"type": "string"
					}, {
						"name": "port",
						"in": "formData",
						"description": "The port number of SVN repository Url",
						"required": true,
						"type": "integer"
					}, {
						"name": "paths",
						"in": "formData",
						"description": "The paths of a SVN repository, seperated by \";\"",
						"required": true,
						"type": "string"
					}, {
						"name": "privateKey",
						"in": "formData",
						"description": "Private key which is used to connect to SVN repository using SSH protocol",
						"required": false,
						"type": "file"
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/osa/fileextensions": {
			"get": {
				"tags": ["OSA"],
				"summary": "Get all supported Open Source file extensions",
				"operationId": "OsaFileExtensions_Get",
				"consumes": ["application/json;v=1.0"],
				"produces": ["text/plain;v=1.0"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/osa/scans/{scanId}": {
			"get": {
				"tags": ["OSA"],
				"summary": "Returns basic scan details for a specified scan",
				"operationId": "OsaScanRequests_GetByscanId",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scanId",
						"in": "path",
						"description": "Unique ID of the specific scan",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.Osa.Application.DTOs.BasicScanDTO"
						}
					}
				}
			}
		},
		"/osa/reports": {
			"get": {
				"tags": ["OSA"],
				"summary": "Returns a Json summary report for the specified scan Id",
				"operationId": "OsaScanReports_GetByscanId",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scanId",
						"in": "query",
						"description": "Unique Id of the specific scan",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/System.Net.Http.ByteArrayContent"
						}
					}
				}
			}
		},
		"/osa/licenses": {
			"get": {
				"tags": ["OSA"],
				"summary": "Returns the licenses associated with the given scan request",
				"operationId": "OsaLicenses_GetLicensesByscanId",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scanId",
						"in": "query",
						"description": "Unique ID of the specific scan",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Osa.Application.DTOs.OsaLicenseDto"
							}
						}
					}
				}
			}
		},
		"/osa/libraries": {
			"get": {
				"tags": ["OSA"],
				"summary": "Returns all the used libraries for the specified scan Id",
				"operationId": "OsaLibraries_GetByscanIdpageitemsPerPage",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scanId",
						"in": "query",
						"description": "Unique Id of the specific scan",
						"required": true,
						"type": "string",
						"format": "uuid"
					}, {
						"name": "page",
						"in": "query",
						"description": "Page number (default 1)",
						"required": false,
						"type": "integer",
						"format": "int32"
					}, {
						"name": "itemsPerPage",
						"in": "query",
						"description": "Number of items per page (default 100)",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Osa.Application.DTOs.ScannedLibraryDTO"
							}
						}
					}
				}
			}
		},
		"/osa/vulnerabilities": {
			"get": {
				"tags": ["OSA"],
				"summary": "Returns all the vulnerabilities for the specified scan Id. Each vulnerability returned is unique to its library or file.",
				"operationId": "OsaVulnerabilities_GetByscanIdpageitemsPerPagelibraryIdstateIdcommentsinceuntil",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scanId",
						"in": "query",
						"description": "Unique Id of the specific scan",
						"required": true,
						"type": "string",
						"format": "uuid"
					}, {
						"name": "page",
						"in": "query",
						"description": "Page number",
						"required": false,
						"type": "integer",
						"format": "int32"
					}, {
						"name": "itemsPerPage",
						"in": "query",
						"description": "Amount of items returned by the request",
						"required": false,
						"type": "integer",
						"format": "int32"
					}, {
						"name": "libraryId",
						"in": "query",
						"description": "Filter by library Ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					}, {
						"name": "stateId",
						"in": "query",
						"description": "Filter by state Ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						},
						"collectionFormat": "multi"
					}, {
						"name": "comment",
						"in": "query",
						"description": "Filter by a comment containing the text",
						"required": false,
						"type": "string"
					}, {
						"name": "since",
						"in": "query",
						"description": "Filter not erlier that the given unix-timestamp value",
						"required": false,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "until",
						"in": "query",
						"description": "Filter not after the given unix-timestamp value",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Osa.Application.DTOs.VulnerabilityDTO"
							}
						}
					}
				}
			}
		},
		"/sast/presets": {
			"get": {
				"tags": ["SAST"],
				"summary": "Get details of all presets",
				"operationId": "Presets_GetAllPresets",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Sast.ScanPresets.Presentation.Dtos.SastPresetsDto"
							}
						}
					}
				}
			}
		},
		"/sast/presets/{id}": {
			"get": {
				"tags": ["SAST"],
				"summary": "Get details of specific preset",
				"operationId": "Presets_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific preset",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/sast/scans/{id}": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets details of a specific Scan",
				"operationId": "SastScans_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific scan",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.SastScansDto"
						}
					}
				}
			},
			"delete": {
				"tags": ["SAST"],
				"summary": "Delete a specific Scan",
				"operationId": "SastScans_DeleteByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific scan",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"202": {
						"description": "Accepted",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"patch": {
				"tags": ["SAST"],
				"summary": "Creates or overrides comment of existing scan",
				"operationId": "SastScans_PatchByidupdatedScanDto",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a scan the comment to add for",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "updatedScanDto",
						"in": "body",
						"description": "Comment's content",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.SaveScanCommentDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		
		"/sast/engineServers": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets details of all Engine Servers",
				"operationId": "EngineServersV1_Get",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Sast.EngineServers.ApplicationContracts.DTOs.EngineServerResponsDto"
							}
						},
						"examples": [{
								"id": 1,
								"name": "string",
								"uri": "string",
								"minLoc": 0,
								"maxLoc": 1,
								"maxScans": 1,
								"cxVersion": "string",
								"status": {
									"id": 0,
									"value": "string"
								}
							}
						]
					}
				}
			},
			"post": {
				"tags": ["SAST"],
				"summary": "Registers an Engine Server",
				"operationId": "EngineServersV1_PostByengineServer",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "engineServer",
						"in": "body",
						"description": "Engine Server details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.EngineServers.ApplicationContracts.DTOs.EngineServerDTO"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Cx.Sast.EngineServers.Presentation.Dtos.CreateEngineServerDto"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/sast/scansQueue/{id}": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets details of Scans Queue",
				"operationId": "ScansQueueV1_GetScanQueueByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Filters the Scans Queue by an unique ID of a specific scan",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "object"
						},
						"examples": {
							"id": 1,
							"stage": {
								"id": 7,
								"value": "Finished"
							},
							"stageDetails": "Stage # 23 of 33",
							"stepDetails": "Stage # 23 of 33",
							"project": {
								"id": 1,
								"name": "LocalProject",
								"link": {
									"rel": "project",
									"uri": "/projects/2"
								}
							},
							"engine": {
								"id": 1,
								"link": {
									"rel": "engine-server",
									"uri": "/sast/engineServers/1"
								}
							},
							"languages": [{
									"id": 2,
									"name": "Java"
								}, {
									"id": 8,
									"name": "JavaScript"
								}
							],
							"teamId": "00000000-3333-1111-b111-989c9070eb11",
							"dateCreated": "2018-01-08T12:16:38.293",
							"queuedOn": "2018-01-08T12:16:55.587",
							"engineStartedOn": "2018-01-08T12:17:13.73",
							"completedOn": "2018-01-08T12:19:13.73",
							"loc": 2700,
							"isIncremental": false,
							"isPublic": true,
							"origin": "Web Portal",
							"queuePosition": 1,
							"totalPercent": 2,
							"stagePercent": 31,
							"initiator": "userName"
						}
					}
				}
			},
			"patch": {
				"tags": ["SAST"],
				"summary": "Update scansQueue Status",
				"operationId": "ScansQueueV1_PatchScansQueueByidscanRequest",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique ID of a specific scan in the queue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "scanRequest",
						"in": "body",
						"description": "ScanRequest data that is needed to be updated, Status options: Canceled",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.PatchScansQueue"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/sast/engineServers/{id}": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets details of a specific Engine Server",
				"operationId": "EngineServersV1_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific Engine Server",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.Sast.EngineServers.ApplicationContracts.DTOs.EngineServerResponsDto"
						},
						"examples": {
							"id": 1,
							"name": "string",
							"uri": "string",
							"minLoc": 0,
							"maxLoc": 1,
							"maxScans": 1,
							"cxVersion": "string",
							"status": {
								"id": 0,
								"value": "string"
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": ["SAST"],
				"summary": "Updates an Engine Server",
				"operationId": "EngineServersV1_PutByidengineServer",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific Engine Server",
						"required": true,
						"type": "integer",
						"format": "int64"
					}, {
						"name": "engineServer",
						"in": "body",
						"description": "Engine Server details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.EngineServers.ApplicationContracts.DTOs.EngineServerDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": ["SAST"],
				"summary": "Unregisters an Engine Server",
				"operationId": "EngineServersV1_DeleteByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific Engine Server",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"204": {
						"description": "Deleted",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/sast/engineConfigurations": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets engine configurations list",
				"operationId": "EngineConfigurations_Get",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Sast.ScanSettings.Application.Dtos.EngineConfigurationDto"
							}
						}
					}
				}
			}
		},
		"/sast/scanSettings/{projectId}": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets the scan settings",
				"operationId": "ScanSettings_GetByprojectId",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "projectId",
						"in": "path",
						"description": "Unique Id of the specific Project",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanSettings.Presentation.Dtos.ScanSettingsResponseDto"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/sast/engineConfigurations/{id}": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets a specific engine configuration by id",
				"operationId": "EngineConfigurations_GetByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "Unique Id of the specific Engine Configuration",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanSettings.Application.Dtos.EngineConfigurationDto"
						}
					},
					"400": {
						"description": "Not Found"
					}
				}
			}
		},
		"/sast/scans/{id}/resultsStatistics": {
			"get": {
				"tags": ["SAST"],
				"summary": "Get the results statistics of a specific scan",
				"operationId": "SastScans_GetResultsStatisticsByid",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.ResultsStatisticsDto"
						}
					}
				}
			}
		},
		"/sast/scansQueue": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets details of Scans Queue",
				"operationId": "ScansQueueV1_GetScansQueueByprojectId",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "projectId",
						"in": "query",
						"description": "Filters the Scans Queue by an unique ID of a specific project",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "object"
						},
						"examples": [{
								"id": 1,
								"stage": {
									"id": 7,
									"value": "Finished"
								},
								"stageDetails": "Stage # 23 of 33",
								"stepDetails": "Stage # 23 of 33",
								"project": {
									"id": 1,
									"name": "LocalProject",
									"link": {
										"rel": "project",
										"uri": "/projects/2"
									}
								},
								"engine": {
									"id": 1,
									"link": {
										"rel": "engine-server",
										"uri": "/sast/engineServers/1"
									}
								},
								"languages": [{
										"id": 2,
										"name": "Java"
									}, {
										"id": 8,
										"name": "JavaScript"
									}
								],
								"teamId": "00000000-3333-1111-b111-989c9070eb11",
								"dateCreated": "2018-01-08T12:16:38.293",
								"queuedOn": "2018-01-08T12:16:55.587",
								"engineStartedOn": "2018-01-08T12:17:13.73",
								"completedOn": "2018-01-08T12:19:13.73",
								"loc": 2700,
								"isIncremental": false,
								"isPublic": true,
								"origin": "Web Portal",
								"queuePosition": 1,
								"totalPercent": 2,
								"stagePercent": 31,
								"initiator": "userName"
							}
						]
					}
				}
			}
		},
		"/sast/scans": {
			"get": {
				"tags": ["SAST"],
				"summary": "Gets a collection of scans By Project",
				"operationId": "SastScans_GetScansBylastscanStatusprojectId",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "last",
						"in": "query",
						"description": "Amount of the latest scans",
						"required": false,
						"type": "integer",
						"format": "int32"
					}, {
						"name": "scanStatus",
						"in": "query",
						"description": "Specifies the scan stage",
						"required": false,
						"type": "string",
						"enum": ["Scanning", "Finished", "Canceled", "Failed"]
					}, {
						"name": "projectId",
						"in": "query",
						"description": "Unique ID of a specific project",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.SastScansDto"
							}
						}
					}
				}
			},
			"post": {
				"tags": ["SAST"],
				"summary": "Creates a new scan",
				"operationId": "SastScans_PostByscan",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scan",
						"in": "body",
						"description": "Scan details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanExecution.ApplicationContracts.DTOs.SastScanRequestWriteDTO"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/sast/scanSettings": {
			"put": {
				"tags": ["SAST"],
				"summary": "Update the scan settings",
				"operationId": "ScanSettings_PutByscanSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scanSettings",
						"in": "body",
						"description": "Scan settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanSettings.Presentation.Dtos.ScanSettingsRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			},
			"post": {
				"tags": ["SAST"],
				"summary": "Define the scan settings",
				"operationId": "ScanSettings_PostByscanSettings",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "scanSettings",
						"in": "body",
						"description": "Scan settings details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.ScanSettings.Presentation.Dtos.ScanSettingsRequestDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/sast/project/{projectId}/scheduling": {
			"put": {
				"tags": ["SAST"],
				"summary": "Define the project's scans scheduling",
				"operationId": "ProjectScheduler_PutByprojectIdscansScheduling",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "projectId",
						"in": "path",
						"description": "Project ID",
						"required": true,
						"type": "integer",
						"format": "int32"
					}, {
						"name": "scansScheduling",
						"in": "body",
						"description": "Scan scheduling details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Scheduler.Api.ViewModels.ProjectScansSchedulingViewModel"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/sast/results/tickets": {
			"post": {
				"tags": ["SAST"],
				"summary": "Attach ticket id to scan results",
				"operationId": "SastResultTickets_SaveByresultsTicket",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "resultsTicket",
						"in": "body",
						"description": "Result ticket details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Cx.Sast.Results.Presentation.Dtos.SaveResultsTicketDto"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					}
				}
			}
		},
		"/sast/dataRetention/stop": {
			"post": {
				"tags": ["SAST"],
				"summary": "Stops data retention execution",
				"operationId": "DataRetention_Post",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"responses": {
					"202": {
						"description": "Accepted",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/sast/dataRetention/byDateRange": {
			"post": {
				"tags": ["SAST"],
				"summary": "Starts data retention execution, by given date range",
				"operationId": "DataRetention_PostBydataRetentionByDates",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "dataRetentionByDates",
						"in": "body",
						"description": "Specify the data retention by dates range settings",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DataRetention.Presentation.Dto.DataRetentionByDatesDto"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/sast/dataRetention/byNumberOfScans": {
			"post": {
				"tags": ["SAST"],
				"summary": "Starts data retention execution, by given number of last successful scans",
				"operationId": "DataRetention_PostBydataRetentionByNumberOfScans",
				"consumes": ["application/json;v=1.0"],
				"produces": ["application/json;v=1.0"],
				"parameters": [{
						"name": "dataRetentionByNumberOfScans",
						"in": "body",
						"description": "Specify the data retention by number of last successful scans settings",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DataRetention.Presentation.Dto.DataRetentionByAmountDto"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"Cx.CrossCutting.AccessControl.Authorization.DTOs.TeamDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"fullName": {
					"type": "string"
				}
			}
		},
		"Cx.CustomTasks.Presentation.Dtos.GetCustomTaskDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"data": {
					"type": "string"
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.SuperTypes.API.Dtos.LinkDtoBase": {
			"type": "object",
			"properties": {
				"rel": {
					"type": "string",
					"readOnly": true
				},
				"uri": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.CustomFields.Api.ViewModels.CustomFieldViewModel": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.ProjectBaseDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"teamId": {
					"format": "uuid",
					"type": "string",
					"readOnly": true,
					"example": "00000000-0000-0000-0000-000000000000"
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"isPublic": {
					"type": "boolean"
				},
				"sourceSettingsLink": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDto"
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.SuperTypes.API.Dtos.LinkDto": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"rel": {
					"type": "string",
					"readOnly": true
				},
				"uri": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.UpdateFullProjectDto": {
			"required": ["name", "owningTeam", "customFields"],
			"type": "object",
			"properties": {
				"name": {
					"description": "Specifies the name of the project",
					"type": "string"
				},
				"owningTeam": {
					"description": "Specifies the team id which owns the project",
					"type": "string"
				},
				"customFields": {
					"description": "Specifies the custom fields in a project",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UpdateCustomFieldDto"
					}
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.UpdateCustomFieldDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"value": {
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.UpdateProjectDto": {
			"type": "object",
			"properties": {
				"name": {
					"description": "Specifies the name of the project",
					"type": "string"
				},
				"owningTeam": {
					"description": "Specifies the team id which owns the project",
					"type": "string"
				}
			},
			"example": {
				"name": "SomeProject",
				"owningTeam": "12345678-1234-1234-1234-123996789012"
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.DeleteProjectDto": {
			"type": "object",
			"properties": {
				"deleteRunningScans": {
					"description": "Specifies whether the running scans must be deleted",
					"type": "boolean"
				}
			},
			"example": {
				"deleteRunningScans": true
			}
		},
		"Cx.IssueTrackingSystems.Presentation.Dtos.GetIssueTrackingSystemDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The specific Id of issue tracking system",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"description": "The name of issue tracking system",
					"type": "string",
					"readOnly": true
				},
				"type": {
					"description": "The type of issue tracking system (Jira)",
					"type": "string",
					"readOnly": true
				},
				"url": {
					"description": "The URL of issue tracking system",
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingSystemMetadata": {
			"type": "object",
			"properties": {
				"projects": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingProjectMetadata"
					},
					"readOnly": true
				}
			}
		},
		"Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingProjectMetadata": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"issueTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingIssueTypeMetadata"
					},
					"readOnly": true
				}
			}
		},
		"Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingIssueTypeMetadata": {
			"type": "object",
			"properties": {
				"subtask": {
					"type": "boolean"
				},
				"id": {
					"type": "string",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"fields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingFieldMetadata"
					},
					"readOnly": true
				}
			}
		},
		"Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingFieldMetadata": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"multiple": {
					"type": "boolean"
				},
				"required": {
					"type": "boolean"
				},
				"supported": {
					"type": "boolean"
				},
				"allowedValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingFieldValue"
					}
				}
			}
		},
		"Cx.IssueTrackingSystems.Application.Dtos.IssueTrackingFieldValue": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GetExcludeSettingsDto": {
			"type": "object",
			"properties": {
				"projectId": {
					"format": "int64",
					"type": "integer"
				},
				"excludeFoldersPattern": {
					"type": "string"
				},
				"excludeFilesPattern": {
					"type": "string"
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.ExcludeSettingsDto": {
			"type": "object",
			"properties": {
				"excludeFoldersPattern": {
					"type": "string"
				},
				"excludeFilesPattern": {
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GetGitSourceSettingsDto": {
			"type": "object",
			"properties": {
				"url": {
					"description": "The URL which is used to connect to GIT repository",
					"type": "string",
					"readOnly": true
				},
				"branch": {
					"description": "The branch of a GIT repository",
					"type": "string",
					"readOnly": true
				},
				"useSsh": {
					"description": "Specified whether a connection to GIT repository uses SSH protocol",
					"type": "boolean",
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"description": "Link to the resource",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GitSourceSettingsDto": {
			"required": ["url", "branch"],
			"type": "object",
			"properties": {
				"url": {
					"description": "The URL which is used to connect to GIT repository",
					"type": "string"
				},
				"branch": {
					"description": "The branch of a GIT repository",
					"type": "string"
				},
				"privateKey": {
					"description": "The private key which is used to connect to GIT repository using SSH protocol",
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GetSvnSourceSettingsDto": {
			"type": "object",
			"properties": {
				"uri": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.PartialUriDto",
					"description": "Specifies the Uri of SVN repository",
					"readOnly": true
				},
				"paths": {
					"description": "Specifies the list of paths to scan at SVN repository",
					"type": "array",
					"items": {
						"type": "string"
					},
					"readOnly": true
				},
				"useSsh": {
					"description": "Specified whether a connection to SVN repository uses SSH protocol",
					"type": "boolean",
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"description": "Link to the resource",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.PartialUriDto": {
			"type": "object",
			"properties": {
				"absoluteUrl": {
					"description": "Specifies the absolute url",
					"type": "string"
				},
				"port": {
					"format": "int32",
					"description": "Specifies the port number of this Uri",
					"type": "integer"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.SvnSourceSettingsDto": {
			"required": ["uri", "paths"],
			"type": "object",
			"properties": {
				"uri": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UriDto",
					"description": "Specifies the Uri of SVN repository"
				},
				"paths": {
					"description": "Specifies the list of paths to scan at SVN repository",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"credentials": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.OptionalCredentialsDto",
					"description": "Specifies credentials for password-based authentication against SVN repository"
				},
				"privateKey": {
					"description": "The private key which is used to connect to SVN repository using SSH protocol",
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.UriDto": {
			"required": ["absoluteUrl", "port"],
			"type": "object",
			"properties": {
				"absoluteUrl": {
					"description": "Specifies the absolute url",
					"type": "string"
				},
				"port": {
					"format": "int32",
					"description": "Specifies the port number of this Uri",
					"maximum": 65535,
					"minimum": 1,
					"type": "integer"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.OptionalCredentialsDto": {
			"type": "object",
			"properties": {
				"userName": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GetTfsSourceSettingsDto": {
			"type": "object",
			"properties": {
				"uri": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UriDto",
					"description": "Specifies the Uri of TFS repository",
					"readOnly": true
				},
				"paths": {
					"description": "Specifies the list of paths to scan at TFS repository",
					"type": "array",
					"items": {
						"type": "string"
					},
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"description": "Link to the resource",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.TfsSourceSettingsDto": {
			"required": ["uri", "paths"],
			"type": "object",
			"properties": {
				"credentials": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.CredentialsDto",
					"description": "Specifies credentials for password-based authentication against TFS repository"
				},
				"uri": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UriDto",
					"description": "Specifies the Uri of TFS repository"
				},
				"paths": {
					"description": "Specifies the list of paths to scan at TFS repository",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.CredentialsDto": {
			"required": ["userName", "password"],
			"type": "object",
			"properties": {
				"userName": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GetCustomSourceSettingsDto": {
			"type": "object",
			"properties": {
				"path": {
					"type": "string",
					"readOnly": true
				},
				"pullingCommandId": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"description": "Link to the resource",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.CustomSourceSettingsDto": {
			"required": ["credentials"],
			"type": "object",
			"properties": {
				"path": {
					"type": "string",
					"readOnly": true
				},
				"preScanCommandId": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"credentials": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.CredentialsDto"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GetSharedSourceSettingsDto": {
			"type": "object",
			"properties": {
				"paths": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"description": "Link to the resource",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.SharedSourceSettingsDto": {
			"required": ["paths", "credentials"],
			"type": "object",
			"properties": {
				"paths": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"credentials": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.CredentialsDto"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GetPerforceSourceSettingsDto": {
			"type": "object",
			"properties": {
				"uri": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UriDto",
					"description": "Specifies the Uri of SVN repository",
					"readOnly": true
				},
				"paths": {
					"description": "Specifies the list of paths to scan at SVN repository",
					"type": "array",
					"items": {
						"type": "string"
					},
					"readOnly": true
				},
				"browseMode": {
					"description": "Specifies the browse mode of Perforce repository",
					"type": "string",
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"description": "Link to the resource",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.PerforceSourceSettingDto": {
			"required": ["paths", "browseMode"],
			"type": "object",
			"properties": {
				"credentials": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.CredentialsDto",
					"description": "Specifies credentials for password-based authentication against Perforce repository"
				},
				"uri": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.UriDto",
					"description": "Specifies the Uri of Perforce repository"
				},
				"paths": {
					"description": "Specifies the list of paths to scan at Perforce repository",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"browseMode": {
					"description": "Specifies the browse mode of Perforce repository",
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.SaveProjectDto": {
			"required": ["owningTeam", "isPublic"],
			"type": "object",
			"properties": {
				"name": {
					"description": "Specifies the name of the project",
					"type": "string"
				},
				"owningTeam": {
					"format": "uuid",
					"description": "Specifies the team id which owns the project",
					"type": "string",
					"example": "00000000-0000-0000-0000-000000000000"
				},
				"isPublic": {
					"description": "Specifies whether the project public or not",
					"type": "boolean"
				}
			},
			"example": {
				"name": "SomeProject",
				"owningTeam": "12345678-1234-1234-1234-123456789012",
				"isPublic": true
			}
		},
		"Cx.SuperTypes.API.Dtos.LinkedResource": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"readOnly": true
				}
			}
		},
		"Cx.AccessControl.API.DTOs.Credentials": {
			"description": "",
			"type": "object",
			"properties": {
				"userName": {
					"description": "",
					"type": "string"
				},
				"password": {
					"description": "",
					"type": "string"
				}
			}
		},
		"Cx.Reports.SastScan.Presentation.Dtos.SastReportRequestDTO": {
			"required": ["reportType", "scanId"],
			"type": "object",
			"properties": {
				"reportType": {
					"type": "string"
				},
				"scanId": {
					"format": "int64",
					"type": "integer"
				}
			}
		},
		"Cx.Reports.SastScan.Presentation.Dtos.CreateReportResponseDto": {
			"type": "object",
			"properties": {
				"reportId": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"links": {
					"$ref": "#/definitions/Cx.Reports.SastScan.Presentation.Dtos.ReportLinksDto",
					"readOnly": true
				}
			}
		},
		"Cx.Reports.SastScan.Presentation.Dtos.CreateReportStatusDto": {
			"type": "object",
			"properties": {
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"readOnly": true
				},
				"contentType": {
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/Cx.Reports.SastScan.Presentation.Dtos.StatusDto",
					"readOnly": true
				}
			}
		},
		"Cx.Reports.SastScan.Presentation.Dtos.StatusDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"value": {
					"enum": ["Deleted", "InProcess", "Created", "Failed"],
					"type": "string"
				}
			}
		},
		"Cx.Reports.SastScan.Presentation.Dtos.ReportLinksDto": {
			"type": "object",
			"properties": {
				"report": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"readOnly": true
				},
				"status": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase",
					"readOnly": true
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.BranchProjectDto": {
			"required": ["name"],
			"type": "object",
			"properties": {
				"name": {
					"description": "Specifies the name of the project",
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.DataRetentionSettingsDto": {
			"type": "object",
			"properties": {
				"scansToKeep": {
					"format": "int32",
					"description": "The amount of scans to keep before they are deleted (set null back to default)",
					"type": "integer"
				}
			},
			"example": {
				"scansToKeep": 10
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.JiraIssueTrackingSettingsDto": {
			"required": ["jiraProjectId", "issueType"],
			"type": "object",
			"properties": {
				"issueTrackingSystemId": {
					"format": "int64",
					"description": "The issue tracking system Id",
					"minimum": 1,
					"type": "integer"
				},
				"jiraProjectId": {
					"description": "The specific Id of JIRA project",
					"type": "string"
				},
				"issueType": {
					"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.JiraIssueType",
					"description": "The JIRA project's issue type"
				}
			},
			"example": {
				"issueTrackingSystemId": 1,
				"jiraProjectId": "12901",
				"issueType": {
					"id": "123",
					"fields": [{
							"id": "priority",
							"values": ["1"]
						}, {
							"id": "customfield_1",
							"values": ["c1", "c2"]
						}
					]
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.JiraIssueType": {
			"required": ["id"],
			"type": "object",
			"properties": {
				"id": {
					"description": "Specifies the Id of issue type",
					"type": "string"
				},
				"fields": {
					"description": "Specifies the list of fields associated with issue type",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.ProjectManagement.Presentation.Dtos.JiraField"
					}
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.JiraField": {
			"required": ["id"],
			"type": "object",
			"properties": {
				"id": {
					"description": "Specifies the Id of field",
					"type": "string"
				},
				"values": {
					"description": "Specifies the list of values or single value",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.GitSourceSettingsBaseDto": {
			"required": ["url", "branch"],
			"type": "object",
			"properties": {
				"url": {
					"description": "The URL which is used to connect to GIT repository",
					"type": "string"
				},
				"branch": {
					"description": "The branch of a GIT repository",
					"type": "string"
				}
			}
		},
		"Cx.ProjectManagement.Presentation.Dtos.SvnSshSourceSettingsDto": {
			"required": ["absoluteUrl", "port", "paths"],
			"type": "object",
			"properties": {
				"absoluteUrl": {
					"description": "The URL which is used to connect to SVN repository",
					"type": "string"
				},
				"port": {
					"format": "int32",
					"description": "The port number of SVN repository Url",
					"type": "integer"
				},
				"paths": {
					"description": "The paths of a SVN repository, seperated by \";\"",
					"type": "string"
				}
			}
		},
		"Cx.Osa.Application.DTOs.BasicScanDTO": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string",
					"example": "00000000-0000-0000-0000-000000000000"
				},
				"startAnalyzeTime": {
					"format": "date-time",
					"type": "string"
				},
				"endAnalyzeTime": {
					"format": "date-time",
					"type": "string"
				},
				"origin": {
					"type": "string"
				},
				"sourceCodeOrigin": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Cx.Osa.Application.DTOs.StateDTO"
				},
				"sharedSourceLocationPaths": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"Cx.Osa.Application.DTOs.StateDTO": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"failureReason": {
					"type": "string"
				}
			}
		},
		"System.Net.Http.ByteArrayContent": {
			"type": "object",
			"properties": {
				"headers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.String,System.Collections.Generic.IEnumerable[System.String]]"
					},
					"readOnly": true
				}
			}
		},
		"System.Collections.Generic.KeyValuePair[System.String,System.Collections.Generic.IEnumerable[System.String]]": {
			"type": "object",
			"properties": {
				"key": {
					"type": "string",
					"readOnly": true
				},
				"value": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"readOnly": true
				}
			}
		},
		"Cx.Osa.Application.DTOs.OsaLicenseDto": {
			"type": "object",
			"properties": {
				"id": {
					"description": "The Id of the open source license",
					"type": "string",
					"readOnly": true
				},
				"name": {
					"description": "License name",
					"type": "string",
					"readOnly": true
				},
				"riskLevel": {
					"description": "License risk level (Low, Medium, High, Unknown)",
					"type": "string",
					"readOnly": true
				},
				"copyrightRiskScore": {
					"format": "int32",
					"description": "The risk of infringing the license copyrights",
					"type": "integer",
					"readOnly": true
				},
				"patentRiskScore": {
					"format": "int32",
					"description": "The risk of infringing patents",
					"type": "integer",
					"readOnly": true
				},
				"copyLeft": {
					"description": "Status of copy-left licensing",
					"type": "string",
					"readOnly": true
				},
				"linking": {
					"description": "The influent of the license on linked code",
					"type": "string",
					"readOnly": true
				},
				"royalityFree": {
					"description": "Whether or not this license is royality-free",
					"type": "string",
					"readOnly": true
				},
				"referenceType": {
					"description": "License description url",
					"type": "string",
					"readOnly": true
				},
				"reference": {
					"type": "string",
					"readOnly": true
				},
				"url": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.Osa.Application.DTOs.ScannedLibraryDTO": {
			"description": "Library DTO",
			"type": "object",
			"properties": {
				"id": {
					"description": "Library ID",
					"type": "string"
				},
				"name": {
					"description": "Library Name",
					"type": "string"
				},
				"version": {
					"description": "Library Version",
					"type": "string"
				},
				"releaseDate": {
					"format": "date-time",
					"description": "Library Release date of the current version",
					"type": "string"
				},
				"highUniqueVulnerabilityCount": {
					"format": "int32",
					"description": "Number of high vulnerabilities",
					"type": "integer"
				},
				"mediumUniqueVulnerabilityCount": {
					"format": "int32",
					"description": "Number of medium vulnerabilities",
					"type": "integer"
				},
				"lowUniqueVulnerabilityCount": {
					"format": "int32",
					"description": "Number of low vulnerabilities",
					"type": "integer"
				},
				"newestVersion": {
					"description": "Newest version (if no newest version exists, then this field will remain empty)",
					"type": "string"
				},
				"newestVersionReleaseDate": {
					"format": "date-time",
					"description": "Release date of newest version (if no newest version exists, then this field will contain 1970/1/1)",
					"type": "string"
				},
				"numberOfVersionsSinceLastUpdate": {
					"format": "int32",
					"description": "Number of newer versions (if no newest version exists, then this field will be 0)",
					"type": "integer"
				},
				"confidenceLevel": {
					"format": "int32",
					"description": "The confidence level about the provided result",
					"type": "integer"
				},
				"matchType": {
					"$ref": "#/definitions/Cx.Osa.Application.DTOs.MatchTypeDto",
					"description": "The method which was used to match the library: Exact Match / Filename Match"
				},
				"licenses": {
					"description": "Collection of legal licenses id",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"outdated": {
					"description": "Indicate whether this library outdated",
					"type": "boolean"
				}
			}
		},
		"Cx.Osa.Application.DTOs.MatchTypeDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"description": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.Osa.Presentation.DTOs.NewDTOs.ScanRequestInfo": {
			"description": "Scan request details",
			"type": "object",
			"properties": {
				"projectId": {
					"format": "int64",
					"description": "The Project Id associated with requested scan",
					"minimum": 1,
					"type": "integer"
				},
				"origin": {
					"description": "The location from which scan was requested (if not specified (Portal) will be selected)",
					"type": "string"
				},
				"hashedFilesList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.Osa.Presentation.DTOs.NewDTOs.HashedFileDTO"
					}
				}
			}
		},
		"Cx.Osa.Presentation.DTOs.NewDTOs.HashedFileDTO": {
			"type": "object",
			"properties": {
				"sha1": {
					"type": "string"
				},
				"filename": {
					"type": "string"
				}
			}
		},
		"Cx.Osa.Presentation.DTOs.NewDTOs.NewScanResponseDTO": {
			"required": ["scanId"],
			"type": "object",
			"properties": {
				"scanId": {
					"format": "uuid",
					"type": "string",
					"example": "00000000-0000-0000-0000-000000000000"
				}
			}
		},
		"Cx.Osa.Application.DTOs.VulnerabilityDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"cveName": {
					"type": "string"
				},
				"score": {
					"format": "float",
					"type": "number"
				},
				"severity": {
					"$ref": "#/definitions/Cx.Osa.Application.DTOs.SeverityDTO"
				},
				"publishDate": {
					"format": "date-time",
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"recommendations": {
					"type": "string"
				},
				"sourceFileName": {
					"type": "string"
				},
				"libraryId": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Cx.Osa.Application.DTOs.Responses.VulnerabilityStateDto"
				},
				"commentsAmount": {
					"format": "int32",
					"type": "integer"
				},
				"similarityId": {
					"type": "string"
				}
			}
		},
		"Cx.Osa.Application.DTOs.SeverityDTO": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"Cx.Osa.Application.DTOs.Responses.VulnerabilityStateDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer",
					"readOnly": true
				},
				"actionType": {
					"type": "string",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.SastScansDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"project": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.ProjectDto"
				},
				"status": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.ScanStatusDto"
				},
				"scanType": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.ScanTypeDto"
				},
				"comment": {
					"type": "string"
				},
				"dateAndTime": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.DateAndTimeDto"
				},
				"resultsStatistics": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.ResultsStatisticsLink"
				},
				"scanState": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.ScanStateDto"
				},
				"owner": {
					"type": "string"
				},
				"origin": {
					"type": "string"
				},
				"initiatorName": {
					"type": "string"
				},
				"owningTeamId": {
					"format": "uuid",
					"type": "string",
					"example": "00000000-0000-0000-0000-000000000000"
				},
				"isPublic": {
					"type": "boolean"
				},
				"isLocked": {
					"type": "boolean"
				},
				"isIncremental": {
					"type": "boolean"
				},
				"scanRisk": {
					"format": "int64",
					"type": "integer"
				},
				"scanRiskSeverity": {
					"format": "int64",
					"type": "integer"
				},
				"engineServer": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.EngineServerDto"
				},
				"finishedScanStatus": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.FinishedScanStatusDto"
				},
				"partialScanReasons": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.Sast.ScanExecution.Domain.Entities.PartialScanDTO"
					}
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.FinishedScanStatusDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"value": {
					"enum": ["None", "Completed", "Partial"],
					"type": "string"
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.ScanTypeDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"enum": ["Unknown", "AllScans", "Regular", "Subset", "Partial", "Running"],
				"type": "string"
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.ProjectDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.ScanStatusDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"details": {
					"$ref": "#/definitions/Cx.Sast.ScanExecution.Presentation.Dtos.ScanStatusDetailsDto",
					"readOnly": true
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.DateAndTimeDto": {
			"type": "object",
			"properties": {
				"startedOn": {
					"format": "date-time",
					"type": "string",
					"readOnly": true
				},
				"finishedOn": {
					"format": "date-time",
					"type": "string",
					"readOnly": true
				},
				"engineStartedOn": {
					"format": "date-time",
					"type": "string",
					"readOnly": true
				},
				"engineFinishedOn": {
					"format": "date-time",
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.ResultsStatisticsLink": {
			"type": "object",
			"properties": {
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.ScanStateDto": {
			"type": "object",
			"properties": {
				"path": {
					"type": "string"
				},
				"sourceId": {
					"type": "string"
				},
				"filesCount": {
					"format": "int64",
					"type": "integer"
				},
				"linesOfCode": {
					"format": "int64",
					"type": "integer"
				},
				"failedLinesOfCode": {
					"format": "int64",
					"type": "integer"
				},
				"cxVersion": {
					"type": "string"
				},
				"languageStateCollection": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cx.Sast.ScanExecution.Domain.Entities.QueryLanguageState"
					}
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.EngineServerDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.Sast.ScanExecution.Domain.Entities.PartialScanDTO": {
			"type": "object",
			"properties": {
				"abortedMessage": {
					"type": "string"
				},
				"abortedStatus": {
					"enum": ["None", "Queries", "Stages", "QueriesExceededResultThreshold"],
					"type": "string"
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.ScanStatusDetailsDto": {
			"type": "object",
			"properties": {
				"stage": {
					"type": "string",
					"readOnly": true
				},
				"step": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.Sast.ScanExecution.Domain.Entities.QueryLanguageState": {
			"type": "object",
			"properties": {
				"languageID": {
					"format": "int32",
					"type": "integer"
				},
				"languageName": {
					"type": "string"
				},
				"languageHash": {
					"type": "string"
				},
				"stateCreationDate": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.SaveScanCommentDto": {
			"required": ["comment"],
			"type": "object",
			"properties": {
				"comment": {
					"description": "Specifies the scan comment",
					"type": "string"
				}
			},
			"example": {
				"comment": "Some comment"
			}
		},
		"Cx.Sast.ScanPresets.Presentation.Dtos.SastPresetsDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"ownerName": {
					"type": "string"
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.Sast.EngineServers.ApplicationContracts.DTOs.EngineServerResponsDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"uri": {
					"type": "string"
				},
				"minLoc": {
					"format": "int32",
					"type": "integer"
				},
				"maxLoc": {
					"format": "int32",
					"type": "integer"
				},
				"maxScans": {
					"format": "int32",
					"type": "integer"
				},
				"cxVersion": {
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/Cx.Sast.EngineServers.Presentation.Dtos.StatusDto"
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.Sast.EngineServers.Presentation.Dtos.StatusDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"value": {
					"enum": ["Offline", "Blocked", "ScanningAndBlocked", "Scanning", "Idle"],
					"type": "string"
				}
			}
		},
		"Cx.Sast.EngineServers.ApplicationContracts.DTOs.EngineServerDTO": {
			"description": "",
			"required": ["name", "uri", "minLoc", "maxLoc", "isBlocked"],
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"type": "string"
				},
				"uri": {
					"description": "",
					"type": "string"
				},
				"minLoc": {
					"format": "int32",
					"description": "",
					"type": "integer"
				},
				"maxLoc": {
					"format": "int32",
					"description": "",
					"type": "integer"
				},
				"isBlocked": {
					"description": "",
					"type": "boolean"
				}
			}
		},
		"Cx.Sast.EngineServers.Presentation.Dtos.CreateEngineServerDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"link": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkDtoBase"
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.PatchScansQueue": {
			"required": ["status"],
			"type": "object",
			"properties": {
				"status": {
					"enum": ["Empty", "Canceled", "Postponed"],
					"type": "string"
				}
			},
			"example": {
				"status": {
					"id": 1,
					"value": "Canceled"
				}
			}
		},
		"Cx.Sast.ScanSettings.Application.Dtos.EngineConfigurationDto": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				}
			}
		},
		"Cx.Sast.ScanSettings.Presentation.Dtos.ScanSettingsResponseDto": {
			"type": "object",
			"properties": {
				"project": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource",
					"readOnly": true
				},
				"preset": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource",
					"readOnly": true
				},
				"engineConfiguration": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource",
					"readOnly": true
				},
				"postScanAction": {
					"$ref": "#/definitions/Cx.SuperTypes.API.Dtos.LinkedResource",
					"readOnly": true
				},
				"emailNotifications": {
					"$ref": "#/definitions/Cx.Sast.ScanSettings.Presentation.Dtos.EmailNotificationsDto",
					"readOnly": true
				}
			}
		},
		"Cx.Sast.ScanSettings.Presentation.Dtos.EmailNotificationsDto": {
			"type": "object",
			"properties": {
				"failedScan": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"beforeScan": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"afterScan": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"Cx.Sast.ScanExecution.Presentation.Dtos.ResultsStatisticsDto": {
			"type": "object",
			"properties": {
				"highSeverity": {
					"format": "int64",
					"type": "integer"
				},
				"mediumSeverity": {
					"format": "int64",
					"type": "integer"
				},
				"lowSeverity": {
					"format": "int64",
					"type": "integer"
				},
				"infoSeverity": {
					"format": "int64",
					"type": "integer"
				},
				"statisticsCalculationDate": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"Cx.Sast.ScanExecution.ApplicationContracts.DTOs.SastScanRequestWriteDTO": {
			"required": ["projectId"],
			"type": "object",
			"properties": {
				"projectId": {
					"format": "int64",
					"description": "Specifies the Unique Id of the specific project to be scanned",
					"minimum": 1,
					"type": "integer"
				},
				"isIncremental": {
					"description": "Specifies whether the scan is incremental of full",
					"type": "boolean"
				},
				"isPublic": {
					"description": "Specifies whether the requested scan is public or private",
					"type": "boolean"
				},
				"forceScan": {
					"description": "Specifies whether the code should be scanned regardless of unchanged code",
					"type": "boolean"
				},
				"comment": {
					"description": "Specifies the scan comment",
					"type": "string"
				}
			},
			"example": {
				"projectId": 1,
				"isIncremental": false,
				"isPublic": true,
				"forceScan": true,
				"comment": ""
			}
		},
		"Cx.Sast.ScanSettings.Presentation.Dtos.ScanSettingsRequestDto": {
			"required": ["projectId", "presetId", "engineConfigurationId"],
			"type": "object",
			"properties": {
				"projectId": {
					"format": "int64",
					"minimum": 1,
					"type": "integer"
				},
				"presetId": {
					"format": "int64",
					"minimum": 1,
					"type": "integer"
				},
				"engineConfigurationId": {
					"format": "int64",
					"minimum": 1,
					"type": "integer"
				},
				"postScanActionId": {
					"format": "int64",
					"minimum": 1,
					"type": "integer"
				},
				"emailNotifications": {
					"$ref": "#/definitions/Cx.Sast.ScanSettings.Presentation.Dtos.EmailNotificationsDto"
				}
			}
		},
		"Scheduler.Api.ViewModels.ProjectScansSchedulingViewModel": {
			"type": "object",
			"properties": {
				"scheduleType": {
					"description": "The Schedule type.\r\nAllowed values are: \"None\", \"Weekly\".",
					"type": "string"
				},
				"scheduledDays": {
					"description": "The Schedule days, relevant just in case ScheduleType is \"Weekly\".type, allowed values are: \"None\", \"Weekly\".\r\nAllowed Values: \"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\".",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"scheduleTime": {
					"description": "The Schedule time in each scheduled days format {HH:MM}.",
					"type": "string"
				}
			}
		},
		"Cx.Sast.Results.Presentation.Dtos.SaveResultsTicketDto": {
			"required": ["resultsId", "ticketId"],
			"type": "object",
			"properties": {
				"resultsId": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"ticketId": {
					"type": "string"
				}
			}
		},
		"DataRetention.Presentation.Dto.DataRetentionByDatesDto": {
			"required": ["startDate", "endDate"],
			"type": "object",
			"properties": {
				"startDate": {
					"format": "date-time",
					"type": "string"
				},
				"endDate": {
					"format": "date-time",
					"type": "string"
				},
				"durationLimitInHours": {
					"format": "int64",
					"type": "integer"
				}
			}
		},
		"DataRetention.Presentation.Dto.DataRetentionByAmountDto": {
			"required": ["numOfSuccessfulScansToPreserve"],
			"type": "object",
			"properties": {
				"numOfSuccessfulScansToPreserve": {
					"format": "int32",
					"type": "integer"
				},
				"durationLimitInHours": {
					"format": "int64",
					"type": "integer"
				}
			}
		}
	}
}